{\rtf1\ansi\ansicpg1252\cocoartf2509
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fnil\fcharset0 Verdana-Bold;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red38\green70\blue139;\red255\green255\blue255;
\red66\green1\blue120;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c19608\c35686\c61569;\cssrgb\c100000\c100000\c100000;
\cssrgb\c33333\c10196\c54510;\cssrgb\c0\c0\c93333;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\qc\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
{{\NeXTGraphic pacman_game.gif \width12740 \height5640 \noorient \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f1\b\fs31\fsmilli15600 \cf3 \cb4 \
\pard\pardeftab720\partightenfactor0
\cf3 \
Projects Overview\cb1 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://ai.berkeley.edu/tutorial.html"}}{\fldrslt 
\fs24 \cf5 \cb4 \ul \ulc5 UNIX/Python Tutorial}}
\fs24 \cf2 \cb4  
\f0\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4 This short UNIX/Python tutorial introduces students to the {\field{\*\fldinst{HYPERLINK "http://www.python.org/"}}{\fldrslt \cf6 \ul \ulc6 Python}} programming language and the UNIX environment.\cb1 \
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://ai.berkeley.edu/search.html"}}{\fldrslt 
\f1\b \cf5 \cb4 \ul \ulc5 Search}}
\f1\b \cb4  
\f0\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4 Students implement depth-first, breadth-first, uniform cost, and A* search algorithms. These algorithms are used to solve navigation and traveling salesman problems in the Pacman world.\cb1 \
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://ai.berkeley.edu/multiagent.html"}}{\fldrslt 
\f1\b \cf5 \cb4 \ul \ulc5 Multi-Agent Search}}
\f1\b \cb4  
\f0\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4 Classic Pacman is modeled as both an adversarial and a stochastic search problem. Students implement multiagent minimax and expectimax algorithms, as well as designing evaluation functions.\cb1 \
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://ai.berkeley.edu/reinforcement.html"}}{\fldrslt 
\f1\b \cf6 \cb4 \ul \ulc6 Reinforcement Learning}}
\f1\b \cb4  
\f0\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4 Students implement model-based and model-free reinforcement learning algorithms, applied to the AIMA textbook's Gridworld, Pacman, and a simulated crawling robot.\cb1 \
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://ai.berkeley.edu/tracking.html"}}{\fldrslt 
\f1\b \cf6 \cb4 \ul \ulc6 Ghostbusters}}
\f1\b \cb4  
\f0\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4 Probabilistic inference in a hidden Markov model tracks the movement of hidden ghosts in the Pacman world. Students implement exact inference using the forward algorithm and approximate inference via particle filters.\cb1 \
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://ai.berkeley.edu/classification.html"}}{\fldrslt 
\f1\b \cf6 \cb4 \ul \ulc6 Classification}}
\f1\b \cb4  
\f0\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4 Students implement standard machine learning classification algorithms using Naive Bayes, Perceptron, and MIRA models to classify digits. Students extend this by implementing a behavioral cloning Pacman agent.\cb1 \
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://ai.berkeley.edu/contest.html"}}{\fldrslt 
\f1\b \cf6 \cb4 \ul \ulc6 Contest: Pacman Capture the Flag}}
\f1\b \cb4  
\f0\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb4 Students create strategies for a team of two agents to play a multi-player capture-the-flag variant of Pacman.\cb1 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs31\fsmilli15600 \cf3 \cb4 Technical Notes\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf2 \cb4 The Pac-Man projects are written in pure Python 2.7 and do not depend on any packages external to a standard Python distribution.\cb1 \
}